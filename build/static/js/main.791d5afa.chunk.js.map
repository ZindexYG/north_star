{"version":3,"sources":["serviceWorker.js","layout/reducer.js","views/login/reducer.js","reducers.js","utils/request.js","views/login/saga.js","sagas.js","views/login/index.js","componetns/iconFont/index.js","layout/layoutHeader.js","utils/colors.js","containers/stargazing/components/chartsPie.js","containers/stargazing/components/chartsLine.js","containers/stargazing/components/planlist.js","containers/stargazing/index.js","containers/details/componetns/LeftCardChart.js","containers/details/componetns/LeftCard.js","containers/details/componetns/MidCardChart.js","containers/details/componetns/MidCardTable.js","containers/details/componetns/MidCard.js","containers/details/index.js","utils/G2.theme.js","views/main/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","layoutReducer","layoutModalReducer","state","visible","destroyOnClose","maskClosable","action","type","Object","assign","payload","title","auth_status","createSelector","loginReducer","status","msg","userInfo","result","desc","getUserInfo","user","changePwd_status","rootReducer","combineReducers","request","axios","create","headers","interceptors","response","use","data","error","Promise","reject","loginSaga","login","mfunc","func","logout","getUserById","changePwd","rootSaga","executeSaga","params","requester","post","call","json","typeMsg","String","code","href","localStorage","clear","sessionStorage","put","sagas","layoutSaga","key","takeEvery","FormItem","Item","props","form","getFieldDecorator","validateFields","dispatch","useDispatch","history","useHistory","AuthStatus","useSelector","GetUserInfo","useEffect","message","setItem","JSON","stringify","push","useState","waggle","setWaggle","setTimeout","className","config","pointR","lineWidth","pointColor","lineColor","count","style","zIndex","gutter","justify","align","height","xl","lg","md","sm","wrapperCol","xs","span","onSubmit","e","preventDefault","force","err","values","userAccount","password","btoa","handleSubmit","rules","required","min","max","validator","rule","value","callback","exec","autoComplete","size","placeholder","prefix","htmlType","block","loading","MyIcon","createFromIconfontCN","scriptUrl","IconFont","LayoutHeader","memo","MenuItem","useLocation","parse","getItem","user_account","lstRole","userSelectNofilter","name","onclick","headerIndexNofilter","listDom","overlay","map","onClick","color","records","planId","planName","titleContent","overlayClassName","placement","arrowPointAtCenter","marginRight","replace","origin","pathname","item","colors","Html","Guide","ChartsPie","dv","setDv","platform","productLineName","planNum","DataView","DataSet","source","transform","field","dimension","as","scale","percent","formatter","val","toFixed","forceFit","padding","radius","innerRadius","showTitle","inPlot","position","html","alignX","alignY","select","tooltip","Math","floor","stroke","ChartsLine","setData","newArr","i","length","flag","j","recordDay","keyArr","forEach","keys","lineNameList","Array","from","Set","shift","timeArr","obj","Date","getTime","maxTime","reduce","pre","cur","minTime","newTimeArr","total","index","tempTime","moment","format","includes","createView","fields","arr","toString","split","newNum","join","range","marker","textStyle","shape","crosshairs","PlanList","_random","el","bordered","dataSource","pagination","rowKey","record","userName","scroll","y","columns","dataIndex","width","ellipsis","render","text","RangePicker","RowCofing","ColConfig","xxl","Stargzing","platformRecords","productRecords","interfaceRecords","subtract","serviceNum","avgTime","interfaceNum","interfaceRecordsList","avgTimeList","spring","useSpring","to","default","textAlign","dropdownClassName","allowClear","separator","disabled","defaultValue","ranges","今天","近7天","近30天","近90天","disabledDate","current","endOf","onCalendarChange","dates","dateStrings","minHeight","div","interpolate","x","toLocaleString","maximumFractionDigits","LeftCardChart","minDay","maxDay","chartsResult","setChartsResult","recordsFilter","dayArr","versionId","versionName","dayStart","indexOf","day","Number","specimen","slice","undefined","LeftCard","MidCardChart","MidCardTable","versionInfos","_uniqby","version","id","tableConfig","fixed","concat","reverse","scrollConfig","MidCard","MidCardChartRecords","RowCofig","middle","siber_left","siber_left_content","siber_right","siber_right_content","Details","days","MidConfig","GlobalTheme","showSinglePoint","plotCfg","axis","left","label","offset","autoRotate","fill","line","tickLine","grid","lineStyle","lineDash","hideFirstLine","bottom","fontSize","lineHeight","textBaseline","alignWithLabel","backgroundColor","boxShadow","border","borderRadius","tooltipCrosshairsRect","rectStyle","opacity","tooltipCrosshairsLine","hollowPoint","legend","Global","G2","Util","Theme","Header","Content","theme","deepMix","setTheme","Main","exact","path","component","maxCount","top","AuthRoute","Component","rest","UnAuthRoute","App","locale","zh_CN","Login","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.791d5afa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createSelector } from 'reselect'\n\nconst layoutReducer = {\n  layoutModalReducer: (\n    state = {\n      visible: false,\n      destroyOnClose: true,\n      maskClosable: true\n    },\n    action\n  ) => {\n    switch (action.type) {\n      case 'layout_modal_show':\n        return Object.assign({}, state, { visible: true }, action.payload)\n      case 'layout_modal_hide':\n        return Object.assign({}, state, { visible: false, title: '' }, action.payload)\n      default:\n        return state\n    }\n  },\n}\n\n// 弹窗\nexport const modalShow = payload => ({ type: 'layout_modal_show', payload })\nexport const modalHide = payload => ({ type: 'layout_modal_hide', payload })\nexport const selectLayoutModalReducer = createSelector(\n  state => state.layoutModalReducer,\n  layoutModalReducer => layoutModalReducer\n)\n// 登录状态\nexport const logout = payload => ({ type: 'logout' })\nexport const InitAuthStatus = () => ({ type: 'init_auth_status' })\nexport const InitGetUserInfo = () => ({ type: 'init_getUserInfo' })\nexport const auth_status = createSelector(\n  state => state.auth_status,\n  auth_status => auth_status\n)\n\nexport default layoutReducer\n","import { createSelector } from 'reselect'\n\nconst loginReducer = {\n  auth_status: (state = { status: '', msg: '', userInfo: null }, action) => {\n    switch (action.type) {\n      case 'login':\n      case 'logout':\n        return Object.assign({}, state, {\n          status: 'loading',\n          msg: 'loading...'\n        })\n      case 'login_success':\n        return Object.assign({}, state, {\n          status: 'success',\n          msg: '登录成功',\n          userInfo: action.payload.result.userInfo\n        })\n      case 'logout_success':\n        return Object.assign({}, state, {\n          status: 'success',\n          msg: '退出成功',\n          userInfo: null\n        })\n      case 'login_failure':\n      case 'logout_failure':\n        return Object.assign({}, state, {\n          status: 'error',\n          msg: action.payload.desc,\n          userInfo: null\n        })\n      case 'init_auth_status':\n        return Object.assign({}, state, {\n          msg: '',\n          status: '',\n          userInfo: null\n        })\n      default:\n        return state\n    }\n  },\n  getUserInfo: (state = { status: '', msg: '', userInfo: {} }, action) => {\n    switch (action.type) {\n      case 'getUserById':\n        return Object.assign({}, state, {\n          status: 'loading',\n          msg: 'loading...'\n        })\n      case 'getUserById_success':\n        return Object.assign({}, state, {\n          status: 'success',\n          msg: action.payload.desc,\n          userInfo: action.payload.result.user\n        })\n      case 'getUserById_failure':\n        return Object.assign({}, state, {\n          status: 'error',\n          msg: action.payload.desc,\n          userInfo: {}\n        })\n      case 'init_getUserInfo':\n        return Object.assign({}, state, {\n          status: '',\n          msg: '',\n          userInfo: {}\n        })\n      default:\n        return state\n    }\n  },\n  changePwd_status: (state = { status: '', msg: '' }, action) => {\n    switch (action.type) {\n      case 'changePwd':\n        return Object.assign({}, state, {\n          status: 'loading',\n          msg: 'loading...'\n        })\n      case 'changePwd_success':\n        return Object.assign({}, state, {\n          status: 'success',\n          msg: action.payload.desc\n        })\n      case 'changePwd_failure':\n        return Object.assign({}, state, {\n          status: 'error',\n          msg: action.payload.desc\n        })\n      case 'init_changePwd_status':\n        return Object.assign({}, state, {\n          status: '',\n          msg: ''\n        })\n      default:\n        return state\n    }\n  }\n}\n\n// 登录\nexport const Login = payload => ({ type: 'login', payload })\n// 登出\nexport const logout = payload => ({ type: 'logout', payload })\n// 获取用户信息\nexport const GetUserById = payload => ({ type: 'getUserById', payload })\n// 修改密码\nexport const ChangePwd = payload => ({ type: 'changePwd', payload })\n\n/* 清空信息状态 */\n// 登录状态\nexport const InitAuthStatus = () => ({ type: 'init_auth_status' })\n// 获取用户信息\nexport const InitGetUserInfo = () => ({ type: 'init_getUserInfo' })\n/* 返回状态信息 */\n\nexport const auth_status = createSelector(\n  state => state.auth_status,\n  auth_status => auth_status\n)\nexport const getUserInfo = createSelector(\n  state => state.getUserInfo,\n  getUserInfo => getUserInfo\n)\nexport const changePwd_status = createSelector(\n  state => state.changePwd_status,\n  changePwd_status => changePwd_status\n)\n\nexport default loginReducer\n","import { combineReducers } from 'redux'\nimport layoutReducer from '@/layout/reducer'\nimport loginReducer from '@/views/login/reducer'\n\nconst rootReducer = combineReducers({\n  ...loginReducer,\n  ...layoutReducer\n})\n\nexport default rootReducer\n","import axios from 'axios';\n\nconst request = axios.create({\n  // timeout: 1000 * 5,\n  headers: { 'Content-Type': 'application/json' }\n});\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\n\n// request.defaults.timeout = 2500 * 2;\n\nrequest.interceptors.response.use(\n  function (response) {\n    if (response.status === 200) {\n      return response.data;\n    } else {\n\n    }\n  },\n  function (error) {\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default request;\n","const loginSaga = {\n  // 登入\n  login: {\n    mfunc: 'userManager',\n    func: 'login'\n  },\n  // 登出\n  logout: {\n    mfunc: 'userManager',\n    func: 'logout'\n  },\n  // 获取用户信息\n  getUserById: {\n    mfunc: 'userManager',\n    func: 'getUserById'\n  },\n  // 修改秘密\n  changePwd: {\n    mfunc: 'userManager',\n    func: 'changePwd'\n  }\n}\n\nexport default loginSaga\n","import { takeEvery, call, put } from 'redux-saga/effects'\nimport request from '@/utils/request.js' /*整体请求封装*/\n\nimport layoutSaga from '@/layout/saga'\n\nimport loginSaga from '@/views/login/saga'\n\n\n// 根据action.type执行异步请求(sage)\nfunction executeSaga(action) {\n  return function*({ func }) {\n    const params = action.payload\n\n    //定义请求者\n    const requester = () => request.post(`http://111.230.183.208:8090/api/${func}`, { params })\n    // request.post('/portal/bts', {mfunc, func, params});//本地测试接口\n\n    try {\n      //调用请求者获取数据\n      const json = yield call(requester)\n\n      let typeMsg = ''\n      switch (String(json.code)) {\n        case '200':\n          typeMsg = `${action.type}_success`\n          break\n        case '304':\n          window.location.href = '/login'\n          localStorage.clear()\n          sessionStorage.clear()\n          break\n        default:\n          typeMsg = `${action.type}_failure`\n          break\n      }\n\n      //dispatch 一个 action 到 reducer 更新 state\n      yield put({\n        type: `${typeMsg}`,\n        payload: json\n      })\n    } catch (error) {\n      let typeMsg = `${action.type}_failure`\n      yield put({\n        type: `${typeMsg}`,\n        payload: {\n          msg: '请求超时',\n          desc: '请求超时'\n        }\n      })\n    }\n  }\n}\n\nconst sagas = Object.assign(\n  {},\n  loginSaga,\n  layoutSaga\n)\n\nfunction* rootSaga() {\n  // eslint-disable-next-line\n  for (let key in sagas) {\n    yield takeEvery(key, action => executeSaga(action)(sagas[key]))\n  }\n}\n\nexport default rootSaga\n","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Form, Input, Button, message, Row, Col, Icon } from 'antd'\nimport ReactCanvasNest from 'react-canvas-nest'\n// import IconFont from '@/componetns/iconFont'\nimport { Login as LoginDispatch, auth_status, getUserInfo, } from './reducer'\nimport './index.less'\n\nconst FormItem = Form.Item\n\nconst Login = props => {\n  const { getFieldDecorator, validateFields } = props.form\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // 登录状态\n  const AuthStatus = useSelector(auth_status)\n  // 个人信息\n  const GetUserInfo = useSelector(getUserInfo)\n\n  const { status, msg, userInfo } = AuthStatus\n\n  useEffect(() => {\n    status === 'error' && message[status](msg)\n    // status === 'success' && dispatch(GetUserById({ userId: userInfo.userId }))\n    status === 'success' &&\n      (() => {\n        message[status](msg)\n        localStorage.setItem('userInfo', JSON.stringify(userInfo))\n        history.push('/main')\n      })()\n    // dispatch(InitAuthStatus())\n  }, [AuthStatus.status, AuthStatus, dispatch, msg, status, userInfo,history])\n\n  // useEffect(() => {\n  //   const { userInfo } = AuthStatus\n  //   const { status, msg } = GetUserInfo\n  //   status === 'error' && message[status](msg)\n  //   status === 'success' &&\n  //     (() => {\n\n  //       // if (userInfo) {}\n  //       userInfo &&\n  //         localStorage.setItem(\n  //           'userInfo',\n  //           JSON.stringify(\n  //             Object.assign({}, userInfo, GetUserInfo.userInfo, {\n  //               loginDate: new Date().getTime()\n  //             })\n  //           )\n  //         )\n  //       // userInfo && (userInfo.userAccount === 'huangqiyou' ? history.push('/main/enshrine') : history.push('/main'))\n  //     })()\n\n  //   status !== '' && dispatch(InitGetUserInfo())\n  // }, [GetUserInfo.status, GetUserInfo, AuthStatus, history, dispatch])\n\n  const [waggle, setWaggle] = useState({\n    'animate-left': 'fadeInUp animated delay-05s',\n    'animate-right': 'fadeInUp animated delay-1s',\n    'animate-bottom': 'fadeInUp animated fast',\n    'animate-bottom-light': 'hide',\n    'animate-top-light': 'hide',\n    'animate-1': 'fadeInLeft animated delay-1s',\n    'animate-2': 'fadeInDown animated delay-1s',\n    'animate-3': 'fadeInRight animated delay-1s',\n    'animate-4': 'fadeInUp animated  delay-1s'\n  })\n\n  useEffect(() => {\n    setTimeout(() => {\n      setWaggle({\n        'animate-left': 'waggle up-left',\n        'animate-right': 'waggle up-right',\n        'animate-bottom': 'waggle ',\n        'animate-bottom-light': 'waggle lightning',\n        'animate-top-light': 'waggle lightning',\n        'animate-1': 'waggle',\n        'animate-2': 'waggle',\n        'animate-3': 'waggle',\n        'animate-4': 'waggle up-down'\n      })\n    }, 2000)\n  }, [])\n\n  // 登录\n  const handleSubmit = e => {\n    e.preventDefault()\n    validateFields({ force: true }, (err, values) => {\n      if (!err) {\n        const { userAccount, password } = values\n        const params = {\n          userAccount,\n          password: btoa(password)\n        }\n        dispatch(LoginDispatch(params))\n      }\n    })\n  }\n\n  // 帐户校验\n  const NumOrChar = (rule, value, callback) => {\n    const pattern = /^[0-9a-zA-Z]+$/\n    if (value !== '' && !pattern.exec(value)) {\n      callback('请按要求填写帐户!')\n    } else {\n      callback()\n    }\n  }\n  return (\n    <div className=\"login-container\">\n      <ReactCanvasNest\n        className=\"canvasNest\"\n        config={{ pointR: 5, lineWidth: 3, pointColor: ' 39,52,89', lineColor: '39,52,89', count: 25 }}\n        style={{ zIndex: -1 }}\n      />\n      <Row gutter={[0, 0]} type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: '100%' }}>\n        <Col {...{ xl: 14, lg: 14, md: 10, sm: 8 }} className=\"container left\">\n          <div className=\"login-animate-container\">\n            <div className={`animate-top-light ${waggle['animate-top-light']}`} />\n            <div className={`animate-left ${waggle['animate-left']}`} />\n            <div className={`animate-right ${waggle['animate-right']}`} />\n            <div className={`animate-bottom ${waggle['animate-bottom']}`} />\n            <div className={`animate-bottom-light ${waggle['animate-bottom-light']}`} />\n            <div className={`animate animate-1 ${waggle['animate-1']}`} />\n            <div className={`animate animate-2 ${waggle['animate-2']}`} />\n            <div className={`animate animate-3 ${waggle['animate-3']}`} />\n            <div className={`animate animate-4 ${waggle['animate-4']}`} />\n          </div>\n        </Col>\n        <Col {...{ xl: 10, lg: 10, md: 14, sm: 16 }} className=\"container right\">\n          <Form\n            className=\"login-form-container\"\n            wrapperCol={{\n              xs: { span: 24 },\n              sm: { span: 24 }\n            }}\n            onSubmit={e => handleSubmit(e)}>\n            <h1 className=\"login-log-title\">BTS</h1>\n            <FormItem>\n              {getFieldDecorator('userAccount', {\n                rules: [\n                  {\n                    required: true,\n                    min: 1,\n                    max: 50,\n                    message: '请输入正确的帐户!'\n                  },\n                  {\n                    validator: NumOrChar\n                  }\n                ]\n              })(<Input autoComplete=\"off\" size=\"large\" placeholder=\"请输入用户账号\" prefix={<Icon type=\"user\" />} />)}\n            </FormItem>\n            <FormItem>\n              {getFieldDecorator('password', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入登录密码'\n                  }\n                ]\n              })(\n                <Input\n                  autoComplete=\"off\"\n                  size=\"large\"\n                  type=\"password\"\n                  placeholder=\"请输入登录密码\"\n                  prefix={<Icon type=\"lock\" />}\n                />\n              )}\n            </FormItem>\n            <FormItem>\n              <Button\n                size=\"large\"\n                className=\"login-form-button\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                block\n                loading={GetUserInfo.status === 'loading' || AuthStatus.status === 'loading'}>\n                登录\n              </Button>\n            </FormItem>\n            <span className=\"container-border top-left\" />\n            <span className=\"container-border top-right\" />\n            <span className=\"container-border bottom-left\" />\n            <span className=\"container-border bottom-right\" />\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Form.create()(Login)\n","import React from 'react'\nimport { Icon } from 'antd'\n\nconst MyIcon = Icon.createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_854671_q412psv761b.js' // 在 iconfont.cn 上生成\n})\n\nconst IconFont = props => <MyIcon {...props} />\n\nexport default IconFont\n","import React, { memo, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Dropdown, Menu, Tooltip, message } from 'antd'\nimport IconFont from '@/componetns/iconFont'\nimport './layoutHeader.less'\nimport {  logout, auth_status, InitAuthStatus } from './reducer.js'\n\nconst LayoutHeader = memo(props => {\n  const MenuItem = Menu.Item\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const location = useLocation()\n  const AuthStatus = useSelector(auth_status)\n\n  const { user_account, lstRole = '管理员' } = JSON.parse(localStorage.getItem('userInfo'))\n\n  useEffect(() => {\n    if (AuthStatus.status !== '') {\n      const { status, msg, userInfo } = AuthStatus\n      // console.log('userInfo',userInfo)\n      status === 'success' &&\n        !userInfo &&\n        (() => {\n          // dispatch(InitGetUserInfo())\n          localStorage.clear()\n          history.push('/login')\n        })()\n      message[status](msg)\n\n      dispatch(InitAuthStatus())\n    }\n  }, [AuthStatus.status, AuthStatus, dispatch, history])\n\n  /* 下拉 */\n  const userSelectNofilter = [\n    {\n      name: `${user_account}(${lstRole})`,\n      onclick: null\n    },\n    {\n      name: '退出系统',\n      onclick: () => {\n        dispatch(logout())\n      }\n    }\n  ]\n  // right-icon\n  const headerIndexNofilter = [\n    // {\n    //   title: '公告',\n    //   listDom: <Icon type=\"sound\" />,\n    //   onclick: () => {\n    //     dispatch(modalShow())\n    //   }\n    // },\n    {\n      title: null,\n      listDom: (\n        <Dropdown\n          className=\"user-msg\"\n          overlay={\n            <Menu className=\"user-dropdown\">\n              {userSelectNofilter.map((user, key) => (\n                <MenuItem key={key} className=\"user-item\">\n                  <span onClick={user.onclick}>{`${user.name}`}</span>\n                </MenuItem>\n              ))}\n            </Menu>\n          }>\n          <span className=\"ant-dropdown-link\">\n            <IconFont type=\"icon-icon-user\" style={{ color: '#fff' }} />\n          </span>\n        </Dropdown>\n      ),\n      onclick: null\n    }\n  ]\n\n  // console.log('location',location.state)\n\n  const { records = {} } = location.state || {}\n  // console.log('records',records)\n  let { planId = 0, planName = '' } = records || {}\n  // title\n  const titleContent = {\n    '/': '观星台',\n    '/main': '观星台',\n    '/main/details': (\n      <div className=\"top\">\n        <Tooltip\n          className=\"top-plan top-plan-tooltip\"\n          overlayClassName=\"top-plan-tooltip-wrapper\"\n          placement=\"bottom\"\n          arrowPointAtCenter\n          title={\n            <div>\n              <span className=\"top-plan-id\" style={{ marginRight: 10 }}>{`ID:${planId}`}</span>\n              <span className=\"top-plan-name\">{planName}</span>\n            </div>\n          }>\n          <span className=\"top-plan top-plan-id\">{`ID:${planId}`}</span>\n          <span className=\"top-plan top-plan-name\">{planName}</span>\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return (\n    <Row className=\"header-container\" type=\"flex\" justify=\"space-between\" align=\"middle\" gutter={16}>\n      <Col xl={4} lg={5} md={6}>\n        <h1\n          className=\"header-left\"\n          onClick={() => {\n            sessionStorage.clear()\n            window.location.replace(`${window.location.origin}/`)\n          }}>\n          North Star\n        </h1>\n      </Col>\n      <Col xl={12} lg={12} md={12}>\n        <div className=\"middle\">{titleContent[window.location.pathname]}</div>\n      </Col>\n      <Col xl={4} lg={5} md={6}>\n        <div className=\"header-right\">\n          {headerIndexNofilter.map((item, key) =>\n            item.title ? (\n              <Tooltip className=\"header-item\" placement=\"bottom\" title={item.title} key={key}>\n                <span onClick={item.onclick}>{item.listDom}</span>\n              </Tooltip>\n            ) : (\n              <span className=\"header-item msg-wrapper\" key={key}>\n                {item.listDom}\n              </span>\n            )\n          )}\n        </div>\n      </Col>\n    </Row>\n  )\n})\n\nexport default LayoutHeader\n","// const colors = [\n//   '#D34996',\n//   '#40D8C8',\n//   '#1E90FD',\n//   '#8282FD',\n//   '#BFD76A',\n//   '#D34995',\n//   '#B082EC',\n//   '#D33B3C',\n//   '#FE8687',\n//   '#8545DE',\n//   '#6DDA90',\n//   '#66B5FD',\n//   '#67B5FD',\n//   '#BB5AF8',\n//   '#2BC15C',\n//   '#D599D8',\n//   '#DF6F6E',\n//   '#5D8EE5',\n//   '#98E660',\n//   '#E5955B',\n//   '#4A5EB2',\n//   '#F9CB21',\n//   '#12C2C0'\n// ]\nconst colors = [\n  '#8282FD',\n  '#E0F227',\n  '#1E90FD',\n  '#3FD9C8',\n  '#D34995',\n  '#F49E35',\n  '#B082EC',\n  '#D23B39',\n  '#FE8687',\n  '#8545DE',\n  '#6BDB90',\n  '#66B6FD',\n  '#BB5AF8',\n  '#2BC15C',\n  '#D599D8',\n  '#DF6F6E',\n  '#5D8EE3',\n  '#98E660',\n  '#FE4E69',\n  '#4A5FB0',\n  '#F9CB22',\n  '#D44A96',\n  '#4B5FB3',\n  '#12C2C2'\n]\n\n// rgb to Hex\nconst rgbToHex = (r, g, b) => {\n  var hex = ((r << 16) | (g << 8) | b).toString(16)\n  return '#' + new Array(Math.abs(hex.length - 7)).join('0') + hex\n}\n// hex to rgb\nconst hexToRgb = hex => {\n  var rgb = []\n  for (var i = 1; i < 7; i += 2) {\n    rgb.push(parseInt('0x' + hex.slice(i, i + 2)))\n  }\n  return rgb\n}\n// 颜色\nconst gradient = (startColor, endColor, step) => {\n  // 将 hex 转换为rgb\n  var sColor = hexToRgb(startColor),\n    eColor = hexToRgb(endColor)\n\n  // 计算R\\G\\B每一步的差值\n  var rStep = (eColor[0] - sColor[0]) / step,\n    gStep = (eColor[1] - sColor[1]) / step,\n    bStep = (eColor[2] - sColor[2]) / step\n\n  var gradientColorArr = []\n  for (var i = 0; i < step; i++) {\n    // 计算每一步的hex值\n    gradientColorArr.push(\n      rgbToHex(parseInt(rStep * i + sColor[0]), parseInt(gStep * i + sColor[1]), parseInt(bStep * i + sColor[2]))\n    )\n  }\n  return gradientColorArr\n}\nexport { colors, rgbToHex, hexToRgb, gradient }\n\n// import colors from '@/utils/colors.js'\n","import React, { useState, useEffect } from 'react'\n// import { useSelector } from 'react-redux'\nimport { Chart, Geom, Axis, Tooltip, Coord, Guide, Legend } from 'bizcharts'\nimport DataSet from '@antv/data-set'\nimport { colors } from '@/utils/colors'\n\nconst { Html } = Guide\n\n// const useClientRect = () => {\n//   const [rect, setRect] = useState(null)\n//   const { width } = useSelector(state => state.resizeReducer)\n//   const ref = useCallback(\n//     node => {\n//       if (node !== null && width !== null) {\n//         setRect(node.getBoundingClientRect())\n//       }\n//     },\n//     [width]\n//   )\n//   return [rect, ref]\n// }\n\nconst ChartsPie = props => {\n  const { title } = props\n  // const [rect, ref] = useClientRect()\n  // const { width = 0 } = rect || {}\n\n  const [dv, setDv] = useState([])\n\n  useEffect(() => {\n    const platform = ['PC', 'M', 'iOS', 'Android']\n    const { result = [] } = props\n    const data = result.map(item => ({\n      item: item.productLineName ? item.productLineName : platform[item.platform],\n      count: item.planNum\n    }))\n    const { DataView } = DataSet\n    const dv = new DataView()\n    dv.source(data).transform({\n      type: 'percent',\n      field: 'count',\n      dimension: 'item',\n      as: 'percent'\n    })\n    setDv(dv)\n  }, [props])\n\n  const cols = {\n    percent: {\n      formatter: val => {\n        val = (val * 100).toFixed(2) + '%'\n        return val\n      }\n    }\n  }\n\n  return (\n    <div >\n      <Chart height={300} data={dv} scale={cols} forceFit={true} padding={[0, 0, 60, 0]}>\n        <Coord type={'theta'} radius={0.75} innerRadius={0.75} />\n        <Axis name=\"percent\" />\n        <Tooltip showTitle={false} inPlot={false} />\n        <Guide>\n          <Html\n            position={['50%', '50%']}\n            html={`<div style=\"color:#fff;font-size:1.16em;text-align: center;width: 10em;\">${title}</div>`}\n            alignX=\"middle\"\n            alignY=\"middle\"\n          />\n        </Guide>\n        <Geom\n          select={[false]}\n          type=\"intervalStack\"\n          position=\"percent\"\n          color={['item',colors]}\n          tooltip={[\n            'item*percent*count',\n            (item, percent, count) => {\n              percent = Math.floor(percent * 100) + '%'\n              return {\n                name: item,\n                value: `${count}个（${percent}）`\n              }\n            }\n          ]}\n          style={{\n            lineWidth: 0,\n            stroke: '#fff'\n          }}\n        />\n        <Legend name={'item'} />\n      </Chart>\n    </div>\n  )\n}\n\nexport default ChartsPie\n","import React, { useState, useEffect } from 'react'\nimport { Chart, Geom, Tooltip, Legend, Axis } from 'bizcharts'\n// import { message } from 'antd'\nimport DataSet from '@antv/data-set'\nimport moment from 'moment'\n\n// BizCharts.setTheme('dark')\n// console.log('biz',BizCharts)\nconst ChartsLine = props => {\n  const [data, setData] = useState([])\n  const { height = 300 } = props\n  // const [lineName, setLineName] = useState([])\n\n  useEffect(() => {\n    const { result } = props\n    let newArr = []\n    for (let i = 0; i < result.length; i++) {\n      let flag = true\n      for (let j = 0; j < newArr.length; j++) {\n        if (newArr[j].recordDay === result[i].recordDay) {\n          newArr[j] = { ...newArr[j], ...result[i] }\n          flag = false\n        }\n      }\n      if (flag) {\n        newArr.push(result[i])\n      }\n    }\n    let keyArr = []\n    newArr.forEach(item => {\n      keyArr = [...keyArr, ...Object.keys(item)]\n    })\n    let lineNameList = Array.from(new Set(keyArr))\n    lineNameList.shift()\n    if (newArr.length > 1) {\n      // 时间不是今天时\n      // 添加无数据时间\n      let timeArr = []\n      newArr.forEach((obj, i) => {\n        timeArr.push(new Date(obj.recordDay).getTime())\n      })\n      let maxTime = timeArr.reduce((pre, cur) => {\n        return cur > pre ? cur : pre\n      })\n      let minTime = timeArr.reduce((pre, cur) => {\n        return cur > pre ? pre : cur\n      })\n      let newTimeArr = []\n      let total = (maxTime - minTime) / (24 * 3600 * 1000)\n      for (let index = 0; index <= total; index++) {\n        let tempTime = minTime + 24 * 3600 * 1000 * index\n        if (tempTime <= maxTime) {\n          newTimeArr.push(moment(tempTime).format('YYYY-MM-DD'))\n        }\n      }\n\n      newTimeArr.forEach(item => {\n        let flag = true\n        newArr.forEach((obj, i) => {\n          if (obj.recordDay === item) {\n            flag = false\n          }\n        })\n        if (flag) {\n          newArr.push({\n            recordDay: item\n          })\n        }\n      })\n\n      // 所有时间添加无数据产品线\n      lineNameList.forEach(item => {\n        newArr.forEach((obj, i) => {\n          if (!Object.keys(obj).includes(item)) {\n            obj[item] = 0\n          }\n        })\n      })\n    }\n\n    const ds = new DataSet()\n    const data = ds.createView().source(newArr)\n    data.transform({\n      type: 'fold',\n      fields: lineNameList,\n      // 展开字段集\n      key: 'city',\n      // key字段\n      value: 'value' // value字段\n    })\n\n    setData(data)\n  }, [props])\n\n  const cols = {\n    value: {\n      formatter: function(val) {\n        let arr = val.toString().split('.')\n        let newNum = arr[0].replace(/(?!\\b)(?=(\\d{3})+$)/g, ',')\n        arr[0] = newNum\n        return arr.join('.')\n      }\n    },\n    recordDay: {\n      range: [0, 1]\n    }\n  }\n  // rgb(43, 144, 242)\n  return (\n    <Chart height={height} padding={[10, 40, 75, 70]} data={data} scale={cols} forceFit>\n      <Legend marker=\"circle\" textStyle={{}} />\n      <Axis name=\"recordDay\" />\n      <Axis name=\"value\" />\n\n      <Geom type=\"line\" position=\"recordDay*value\" size={2} color={'city'} style={{}} shape={'smooth'} />\n      <Geom type=\"point\" position=\"recordDay*value\" size={2} color={'city'} style={{}} />\n      <Geom type=\"area\" position=\"recordDay*value\" color={['city', ['rgba(43, 144, 242,.1)']]} tooltip=\"false\" shape=\"smooth\" />\n      <Tooltip crosshairs={{ type: 'y' }} />\n    </Chart>\n  )\n}\n\nexport default ChartsLine\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n// import { useSelector } from 'react-redux'\nimport { Table } from 'antd'\nimport _random from 'lodash.random'\n// import * as Api from '../reducer'\n\nconst PlanList = props => {\n  const history = useHistory()\n  // const getUserBehaviorResult = useSelector(Api.getUserBehaviorResult)\n  const records = Array.from({ length: _random(1,10)}).map((el, index) => {\n    const arrStr = ['PC', 'IOS']\n    const planStr = ['测试实验','正式实验','灰度实验']\n    return {\n      planId: 1000 + index * 10,\n      planName: `${arrStr[_random(0, 1)]}_${planStr[_random(0,2)]}_${_random(1,100)}`,\n      type: _random(2, 3)\n    }\n  })\n\n  const config = {\n    size: 'small',\n    bordered: false,\n    dataSource: records,\n    pagination: false,\n    rowKey: record => record.userName,\n    scroll: {\n      y: records.length > 5 ? 250 : null\n    },\n    columns: [\n      {\n        title: 'ID',\n        dataIndex: 'planId',\n        key: 'planId',\n        align: 'center'\n        // width:120\n      },\n      {\n        title: '实验名称',\n        dataIndex: 'planName',\n        key: 'planName',\n        width: '80%',\n        ellipsis: true,\n        render: (text, record) => (\n          <div\n            className=\"row-container\"\n            onClick={e => {\n              history.push({\n                pathname: '/main/details',\n                state: {\n                  records: record\n                }\n              })\n            }}\n            title={text}>\n            {text}\n          </div>\n        )\n      }\n    ]\n  }\n\n  return <Table className=\"no-background-table\" {...config} />\n}\n\nexport default PlanList\n","import React from 'react'\nimport { Row, Col, DatePicker, Card } from 'antd'\nimport { animated, useSpring, config } from 'react-spring'\nimport { ChartsPie, ChartsLine, PlanList } from './components'\nimport _random from 'lodash.random'\nimport moment from 'moment'\nimport './index.less'\n\nconst RangePicker = DatePicker.RangePicker\n\nconst RowCofing = {\n  gutter: {\n    xs: 8,\n    sm: 16,\n    md: 24,\n    lg: 32\n  }\n}\n\nconst ColConfig = {\n  left: {\n    xxl: 8,\n    xl: 8,\n    lg: 24,\n    sm: 24\n  },\n  left_content: {\n    xxl: 24,\n    xl: 24,\n    lg: 12,\n    sm: 12\n  },\n  middle: {\n    xxl: 8,\n    xl: 16,\n    lg: 24,\n    sm: 24\n  },\n  middle_content: {},\n  right: {\n    xxl: 8,\n    xl: 24,\n    lg: 24,\n    sm: 24\n  },\n  right_content: {}\n}\n// moment().subtract(6, 'days')\nconst Stargzing = props => {\n  const {\n    platformRecords = [\n      {\n        platform: 0,\n        planNum: _random(5, 75),\n      },\n      {\n        platform: 1,\n        planNum: _random(5, 75),\n      },\n      {\n        platform: 2,\n        planNum: _random(5, 75),\n      },\n      {\n        platform: 3,\n        planNum: _random(5, 75),\n      }\n    ],\n    productRecords = [\n      {\n        productLineName: 'D',\n        planNum: _random(5, 75),\n      },\n      {\n        productLineName: 'G',\n        planNum: _random(5, 75),\n      }\n    ]\n  } = {}\n  const {\n    interfaceRecords = [\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(6, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(5, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(4, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(3, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(2, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'D',\n        recordDay: moment()\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(6, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(5, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(4, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(3, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(2, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      },\n      {\n        productLineName: 'G',\n        recordDay: moment()\n          .subtract(1, 'days')\n          .format('YYYY-MM-DD'),\n        serviceNum: _random(999, 2000),\n        avgTime: _random(1, 10, false)\n      }\n    ],\n    planNum = _random(1, 99),\n    avgTime = _random(0, 2, true),\n    interfaceNum = _random(50000000, 500000000)\n  } = {}\n  const interfaceRecordsList = [],\n    avgTimeList = []\n\n  interfaceRecords.map(item => {\n    interfaceRecordsList.push(\n      Object.assign(\n        {},\n        {\n          recordDay: item.recordDay,\n          [item.productLineName]: item.serviceNum\n        }\n      )\n    )\n    avgTimeList.push(\n      Object.assign(\n        {},\n        {\n          recordDay: item.recordDay,\n          [item.productLineName]: item.avgTime\n        }\n      )\n    )\n    return item\n  })\n\n  const spring = useSpring({\n    to: { planNum, avgTime, interfaceNum: interfaceNum },\n    from: { planNum: 0, avgTime: 0, interfaceNum: 0 },\n    config: config.default\n  })\n  return (\n    <div className=\"stargazing-container\">\n      <Row {...RowCofing} type=\"flex\" align=\"top\">\n        <Col {...ColConfig.left} span={8}>\n          <Row type=\"flex\" align=\"top\">\n            <Col className=\"mb20\" span={24} style={{ textAlign: 'center' }}>\n              <RangePicker\n                size={'lagrge'}\n                className=\"global-calendar\"\n                dropdownClassName={'global-calendar-dropdown'}\n                allowClear={false}\n                separator={'—'}\n                disabled\n                defaultValue={[moment().subtract(6, 'days'), moment().subtract(1, 'days'),]}\n                ranges={{\n                  今天: [moment(), moment()],\n                  近7天: [moment().subtract(6, 'days'), moment()],\n                  近30天: [moment().subtract(29, 'days'), moment()],\n                  近90天: [moment().subtract(89, 'days'), moment()]\n                }}\n                disabledDate={current => current && current > moment().endOf('day')}\n                onCalendarChange={(dates, dateStrings) => {}}\n              />\n            </Col>\n            <Col className=\"mb20\" span={24}>\n              <Card title=\"实验分布\">\n                <Row>\n                  <Col span={12}>\n                    <ChartsPie title={'产品线'} result={productRecords} />\n                  </Col>\n                  <Col span={12}>\n                    <ChartsPie title={'终端'} result={platformRecords} />\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col className=\"mb20\" span={24}>\n              <Card title=\"实验列表\" className=\"user-action-container\">\n                <PlanList />\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n        <Col {...ColConfig.middle} className=\"mb20\" span={8}>\n          <Card title=\"总览\" style={{ minHeight: '845px' }}>\n            <Row>\n              <Col span={24} className=\"mb20\">\n                <div className=\"interfaceNum-container\">\n                  <div className=\"tag-context\">调用接口次数</div>\n                  <animated.div className=\"num-tag\">\n                    {spring.interfaceNum.interpolate(x => x.toLocaleString('en-US', { maximumFractionDigits: 0 }))}\n                  </animated.div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"info-tag avg-time-container\">\n                  <div className=\"tag-context\">平均响应速度</div>\n                  <div className=\"num-wrapper\">\n                    <animated.span>\n                      {spring.avgTime.interpolate(x => x.toLocaleString('en-US', { maximumFractionDigits: 2 }))}\n                    </animated.span>\n                    <span className=\"tag-unit\">ms</span>\n                  </div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"info-tag plan-num-container\">\n                  <div className=\"tag-context\">新增有效实验</div>\n                  <div className=\"num-wrapper\">\n                    <animated.span>{spring.planNum.interpolate(x => x.toFixed(0))}</animated.span>\n                    <span className=\"tag-unit\">个</span>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col {...ColConfig.right} span={8}>\n          <Row {...RowCofing} type=\"flex\" align=\"top\">\n            <Col className=\"mb20\" span={24}>\n              <Card title=\"每日调用次数\">\n                <ChartsLine height={340} result={interfaceRecordsList} />\n              </Card>\n            </Col>\n            <Col className=\"mb20\" span={24}>\n              <Card title=\"每日响应速度\">\n                <ChartsLine height={340} result={avgTimeList} />\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Stargzing\n","import React, { useState, useEffect } from 'react'\nimport { Chart, Geom, Tooltip, Axis, Legend } from 'bizcharts'\nimport DataSet from '@antv/data-set'\nimport moment from 'moment'\n\nconst { DataView } = DataSet\n\nconst LeftCardChart = props => {\n  const { records = [], height = 302.5 } = props\n\n  const [chartsResult, setChartsResult] = useState({\n    dv: new DataView(),\n    minDay: 0,\n    maxDay: 0\n  })\n  useEffect(() => {\n    const dv = new DataView()\n    const recordsFilter = []\n    const fields = []\n    const dayArr = []\n    let minDay = ''\n    let maxDay = ''\n    records &&\n      records.map((record, index) => {\n        const name = `实验_${record.versionId}_${record.versionName}`\n        // const day = record.dayStart\n\n        minDay = !minDay\n          ? record.dayStart\n          : moment(record.dayStart, 'x') < moment(minDay, 'x')\n          ? record.dayStart\n          : minDay\n\n        maxDay = !maxDay\n          ? record.dayStart\n          : moment(record.dayStart, 'x') > moment(maxDay, 'x')\n          ? record.dayStart\n          : maxDay\n\n        if (fields.indexOf(name) === -1) {\n          fields.push(name)\n        }\n\n        if (dayArr.indexOf(record.dayStart) === -1) {\n          dayArr.push(record.dayStart)\n          recordsFilter.push({\n            day: record.dayStart,\n            [name]: Number(record.specimen)\n          })\n        } else {\n          recordsFilter.map(field => {\n            if (field.day === record.dayStart) {\n              field[name] = Number(record.specimen)\n            }\n            return field\n          })\n        }\n        return record\n      })\n\n    dv.source(recordsFilter).transform({\n      type: 'fold',\n      fields,\n      key: 'versionName',\n      value: 'specimen'\n    })\n\n    setChartsResult({ dv, minDay, maxDay })\n  }, [records])\n\n  const scale = {\n    day: {\n      formatter: value => moment(value).format('MM-DD'),\n      min: moment(chartsResult.minDay).format('YYYY-MM-DD'),\n      max: moment(chartsResult.minDay).format('YYYY-MM-DD')\n    },\n    specimen: {\n      min: 0\n    }\n  }\n  return (\n    <Chart\n      data={records && records.length ? chartsResult.dv : []}\n      scale={scale}\n      forceFit\n      placeholder\n      height={height}\n      padding={[10, 40, 120, 40]}>\n      <Legend\n        formatter={(text, item, index) =>\n          text\n            .split('_')\n            .slice(0, text.split('_').length - 1)\n            .toString()\n            .replace(/,/gi, '_')\n        }\n      />\n      <Axis name=\"day\" />\n      <Axis name=\"specimen\" />\n      <Tooltip crosshairs={{ type: 'y' }} />\n\n      <Geom\n        type=\"line\"\n        size={1.5}\n        position=\"day*specimen\"\n        color={['versionName']}\n        shape={'smooth'}\n        tooltip={[\n          'day*versionName*specimen',\n          (day, versionName, specimen) => ({\n            title: day,\n            name: versionName\n              .split('_')\n              .slice(0, versionName.split('_').length - 1)\n              .toString()\n              .replace(/,/gi, '_'),\n            value: specimen !== undefined ? specimen : ''\n          })\n        ]}\n      />\n      <Geom\n        type=\"point\"\n        size={1}\n        position=\"day*specimen\"\n        color={['versionName']}\n        shape={'circle'}\n        tooltip={[\n          'day*versionName*specimen',\n          (day, versionName, specimen) => ({\n            title: day,\n            name: versionName\n              .split('_')\n              .slice(0, versionName.split('_').length - 1)\n              .toString()\n              .replace(/,/gi, '_'),\n            value: specimen !== undefined ? specimen : ''\n          })\n        ]}\n      />\n      <Geom type=\"area\" position=\"day*specimen\" color={['versionName', ['rgba(43, 144, 242,.1)']]} tooltip=\"false\" shape=\"smooth\" />\n    </Chart>\n  )\n}\n\nexport default LeftCardChart\n","import React from 'react'\nimport { Card } from 'antd'\nimport _random from 'lodash.random'\nimport moment from 'moment'\nimport LeftCardChart from './LeftCardChart.js'\n// moment().subtract(5, 'days').format('YYYY-MM-DD'),\nconst LeftCard = props => {\n  const { type } = props\n  const records = []\n\n  Array.from({ length: 7 }).map((el, day) => {\n    return Array.from({ length: type }).map((el, index) => {\n      records.push({\n        versionId: 1000 + index,\n        specimen: _random(1000, 3000),\n        versionName: 1000 + index,\n        dayStart: moment()\n          .subtract(7 - Number(day), 'days')\n          .format('YYYY-MM-DD')\n      })\n      return el\n    })\n  })\n\n  return (\n    <Card className=\"specimen-count-chart-container\" title=\"实验样本量\">\n      <LeftCardChart records={records} />\n    </Card>\n  )\n}\n\nexport default LeftCard\n","import React, { useState,useEffect } from 'react'\nimport { Chart, Geom, Tooltip, Legend, Axis } from 'bizcharts'\nimport moment from 'moment'\nimport { DataSet } from '@antv/data-set'\n\nconst { DataView } = DataSet\n\nconst MidCardChart = props => {\n  const { records = [], height = 400 } = props\n\n  const [chartsResult, setChartsResult] = useState({\n    dv: new DataView(),\n    minDay: 0,\n    maxDay: 0\n  })\n\n  useEffect(() => {\n    const dv = new DataView()\n    const recordsFilter = []\n    const fields = []\n    const dayArr = []\n    let minDay = ''\n    let maxDay = ''\n    records &&\n      records.map((record, index) => {\n        const name = `实验_${record.versionId}_${record.versionName}`\n        // const day = record.dayStart\n\n        minDay = !minDay\n          ? record.dayStart\n          : moment(record.dayStart, 'x') < moment(minDay, 'x')\n          ? record.dayStart\n          : minDay\n\n        maxDay = !maxDay\n          ? record.dayStart\n          : moment(record.dayStart, 'x') > moment(maxDay, 'x')\n          ? record.dayStart\n          : maxDay\n\n        if (fields.indexOf(name) === -1) {\n          fields.push(name)\n        }\n\n        if (dayArr.indexOf(record.dayStart) === -1) {\n          dayArr.push(record.dayStart)\n          recordsFilter.push({\n            day: record.dayStart,\n            [name]: Number(record.specimen)\n          })\n        } else {\n          recordsFilter.map(field => {\n            if (field.day === record.dayStart) {\n              field[name] = Number(record.specimen)\n            }\n            return field\n          })\n        }\n        return record\n      })\n\n    dv.source(recordsFilter).transform({\n      type: 'fold',\n      fields,\n      key: 'versionName',\n      value: 'specimen'\n    })\n\n    setChartsResult({ dv, minDay, maxDay })\n  }, [records])\n\n  const scale = {\n    day: {\n      formatter: value => moment(value).format('YYYY-MM-DD'),\n      min: moment(chartsResult.minDay).format('YYYY-MM-DD'),\n      max: moment(chartsResult.minDay).format('YYYY-MM-DD')\n    },\n    specimen: {\n      min: 0\n    }\n  }\n  return (\n    <Chart\n      data={records && records.length ? chartsResult.dv : []}\n      scale={scale}\n      forceFit\n      placeholder\n      height={height}\n      padding={[10, 40, 120, 40]}>\n      <Legend\n        formatter={(text, item, index) =>\n          text\n            .split('_')\n            .slice(0, text.split('_').length - 1)\n            .toString()\n            .replace(/,/gi, '_')\n        }\n      />\n      <Axis name=\"day\" />\n      <Axis name=\"specimen\" />\n      <Tooltip crosshairs={{ type: 'y' }} />\n\n      <Geom\n        type=\"line\"\n        size={1.5}\n        position=\"day*specimen\"\n        color={['versionName']}\n        shape={'smooth'}\n        tooltip={[\n          'day*versionName*specimen',\n          (day, versionName, specimen) => ({\n            title: day,\n            name: versionName\n              .split('_')\n              .slice(0, versionName.split('_').length - 1)\n              .toString()\n              .replace(/,/gi, '_'),\n            value: specimen !== undefined ? specimen : ''\n          })\n        ]}\n      />\n      <Geom\n        type=\"point\"\n        size={1}\n        position=\"day*specimen\"\n        color={['versionName']}\n        shape={'circle'}\n        tooltip={[\n          'day*versionName*specimen',\n          (day, versionName, specimen) => ({\n            title: day,\n            name: versionName\n              .split('_')\n              .slice(0, versionName.split('_').length - 1)\n              .toString()\n              .replace(/,/gi, '_'),\n            value: specimen !== undefined ? specimen : ''\n          })\n        ]}\n      />\n      <Geom\n        type=\"area\"\n        position=\"day*specimen\"\n        color={['versionName', ['rgba(43, 144, 242,.1)']]}\n        tooltip=\"false\"\n        shape=\"smooth\"\n      />\n    </Chart>\n  )\n}\n\nexport default MidCardChart\n","import React from 'react'\nimport { Table } from 'antd'\n// import moment from 'moment'\n// import _sortby from 'lodash.sortby'\nimport _uniqby from 'lodash.uniqby'\n\nconst MidCardTable = props => {\n  const { records } = props\n\n  const initTDColumns = [{ title: '版本名称', dataIndex: 'versionName', key: 'versionName', fixed: 'left', width: 165 }]\n\n  const versionInfos = _uniqby(records, 'versionId')\n  const columns = []\n\n  const source = versionInfos.map(version => {\n    return {\n      key: version.versionId,\n      versionName: `实验_${version.versionName}`\n    }\n  })\n\n  records.map((el, index) => {\n    columns.push({\n      title: el.dayStart,\n      dataIndex: el.dayStart,\n      key: el.dayStart,\n      specimen: el.specimen,\n      id: el.versionId\n    })\n    return el\n  })\n\n  source.map(el => {\n    columns.map(item => {\n      if (el.key === Number(item.id)) {\n        el[item.key] = item.specimen\n      }\n      return item\n    })\n    return el\n  })\n\n  const tableConfig = {\n    columns: initTDColumns.concat(_uniqby(columns, 'key').reverse()),\n    source: source\n  }\n  const scrollConfig = {\n    x: tableConfig.columns.length < 8 ? null : tableConfig.columns.length * 225,\n    y: tableConfig.source.length < 4 ? null : tableConfig.source.length * 185\n  }\n\n  return (\n    <Table\n      size=\"small\"\n      columns={tableConfig.columns}\n      className=\"no-background-table\"\n      dataSource={tableConfig.source}\n      scroll={scrollConfig}\n      pagination={false}\n    />\n  )\n}\n\nexport default MidCardTable\n","import React from 'react'\n// import { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Card } from 'antd'\nimport _random from 'lodash.random'\nimport moment from 'moment'\n\nimport MidCardChart from './MidCardChart.js'\nimport MidCardTable from './MidCardTable.js'\n\nconst MidCard = props => {\n  const MidCardChartRecords = []\n  const { type } = props\n\n  Array.from({ length: 7 }).map((el, day) => {\n    return Array.from({ length: type }).map((el, index) => {\n      MidCardChartRecords.push({\n        versionId: 1000 + index,\n        specimen: _random(1000, 3000),\n        versionName: 1000 + index,\n        dayStart: moment()\n          .subtract(7 - Number(day), 'days')\n          .format('YYYY-MM-DD')\n      })\n      return el\n    })\n  })\n  return (\n    <Row gutter={[16, 10]} type=\"flex\" justify=\"space-between\" align=\"top\">\n      <Col span={24}>\n        <Card className=\"mid-card-chart-container\" title=\"实验分析\">\n          <MidCardChart records={MidCardChartRecords} />\n        </Card>\n      </Col>\n      <Col span={24}>\n        <Card className=\"result-mid-table-container\" title=\"实验明细\">\n          <MidCardTable records={MidCardChartRecords} type={type} />\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MidCard\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { Row, Col, Card, DatePicker } from 'antd'\nimport { animated, useSpring, config } from 'react-spring'\nimport { MidCard, LeftCard } from './componetns'\nimport moment from 'moment'\nimport _random from 'lodash.random'\nimport './index.less'\n// import * as Api from './api.js'\n//\nconst RangePicker = DatePicker.RangePicker\n\nconst RowCofig = {\n  gutter: [16, 16]\n}\n\nconst ColConfig = {\n  middle: {\n    xxl: 16,\n    xl: 16,\n    lg: 24,\n    sm: 24\n  },\n  siber_left: {\n    xxl: 8,\n    xl: 8,\n    lg: 24,\n    sm: 24\n  },\n  siber_left_content: {\n    xxl: 24,\n    xl: 24,\n    lg: 12,\n    sm: 12\n  },\n  siber_right: {\n    xxl: 6,\n    xl: 24,\n    lg: 24,\n    sm: 24\n  },\n  siber_right_content: {\n    xxl: 24\n  }\n}\n\nconst Details = props => {\nconst { specimen = _random(100,999999), days = _random(10,225) } =  {}\n  const spring = useSpring({\n    to: { specimen: Number(specimen), days },\n    from: { specimen: 0, days: 0 },\n    config: config.default\n  })\n   const location = useLocation()\n   const { type } = location.state.records || {}\n  return (\n    <div className=\"result-container\">\n      <Row {...RowCofig} type=\"flex\" justify=\"space-between\" align=\"top\">\n        <Col {...ColConfig.siber_left} className=\"mb20\">\n          <Row gutter={[16, 10]} type=\"flex\" justify=\"space-between\" align=\"top\">\n            <Col {...{ xxl: 24, xl: 24, lg: 10, sm: 10 }}>\n              <RangePicker\n                size={'lagrge'}\n                className=\"mb10 global-calendar\"\n                dropdownClassName={'global-calendar-dropdown'}\n                allowClear={false}\n                separator={'—'}\n                disabled\n                defaultValue={[moment().subtract(6, 'days'), moment().subtract(1, 'days'),]}\n                disabledDate={current => current && current > moment().endOf('day')}\n                onCalendarChange={(dates, dateStrings) => {}}\n              />\n              <Card title=\"实验已运行天数\" className=\"num-container days mb10\">\n                <animated.div className=\"num-box\">{spring.days.interpolate(x => x.toFixed(0))}</animated.div>\n              </Card>\n              <Card title=\"访客样本总数\" className=\"num-container specimen\">\n                <animated.div className=\"num-box\">\n                  {spring.specimen.interpolate(x => x.toLocaleString('en-US', { maximumFractionDigits: 0 }))}\n                </animated.div>\n              </Card>\n            </Col>\n            <Col {...{ xxl: 24, xl: 24, lg: 10, sm: 10 }}>\n              <LeftCard type={type}/>\n            </Col>\n          </Row>\n        </Col>\n        <Col {...ColConfig.middle} className=\"mb20\">\n          <MidCard MidConfig={ColConfig.middle} type={type} />\n        </Col>\n{/*        <Col {...ColConfig.siber_right} className=\"mb20\">\n          <RightCard type={type}/>\n        </Col>*/}\n      </Row>\n    </div>\n  )\n}\n\nexport default Details\n","import { colors } from './colors.js'\n// tooltip 相关 dom 的 css 类名\nconst TOOLTIP_CONTAINER_CLASS = 'g2-tooltip'\n// const LEGEND_CONTAINER_CLASS = 'g2-legend'\n\n// const TOOLTIP_TITLE_CLASS = 'g2-tooltip-title'\n// const TOOLTIP_LIST_CLASS = 'g2-tooltip-list'\n// const TOOLTIP_LIST_ITEM_CLASS = 'g2-tooltip-list-item'\n// const TOOLTIP_MARKER_CLASS = 'g2-tooltip-marker'\n// const TOOLTIP_VALUE_CLASS = 'g2-tooltip-value'\n\n// const COLOR_PLATE_8 = ['#1890FF', '#2FC25B', '#FACC14', '#8543E0', '#13C2C2', '#3436C7', '#F04864', '#223273']\n// const COLOR_PLATE_8 = ['#1890FF', '#2FC25B', '#FACC14', '#8543E0', '#13C2C2', '#3436C7', '#F04864', '#223273']\n// console.log('color', colors)\nconst COLOR_PLATE_8 = colors\n\nconst GlobalTheme = {\n  colors: COLOR_PLATE_8,\n  showSinglePoint: true,\n  plotCfg: {\n    padding: [500, 500, 600, 100]\n  },\n  axis: {\n    left: {\n      position: 'left',\n      title: null,\n      label: {\n        offset: 8,\n        autoRotate: true,\n        textStyle: {\n          fill: '#47608A'\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#47608A'\n      },\n      tickLine: null,\n      grid: {\n        zIndex: -1,\n        lineStyle: {\n          stroke: '#47608A',\n          lineWidth: 1,\n          lineDash: [9, 5]\n        },\n        hideFirstLine: true\n      }\n    },\n    bottom: {\n      position: 'bottom',\n      title: null,\n      label: {\n        offset: 16,\n        autoRotate: true,\n        textStyle: {\n          fill: '#47608A',\n          fontSize: 12,\n          lineHeight: 16,\n          textBaseline: 'middle'\n        }\n      },\n      line: {\n        lineWidth: 1,\n        stroke: '#47608A'\n      },\n      tickLine: {\n        lineWidth: 1,\n        stroke: '#47608A',\n        length: 4,\n        alignWithLabel: true\n      }\n    }\n  },\n  tooltip: {\n    [`${TOOLTIP_CONTAINER_CLASS}`]: {\n      backgroundColor: 'rgba(29,39,54, 1)',\n      boxShadow: 'rgb(20, 78, 127) 0px 0px 15px 10px inset',\n      color: 'rgb(255, 255, 255)',\n      border: '1px solid rgb(5,119,208)',\n      borderRadius: '4px'\n    }\n  },\n  tooltipCrosshairsRect: {\n    rectStyle: {\n      fill: '#0092FE',\n      opacity: 0.9\n    }\n  },\n  tooltipCrosshairsLine: {\n    lineStyle: {\n      stroke: '#0092FE',\n      lineWidth: 3\n    }\n  },\n  shape: {\n    hollowPoint: {\n      lineWidth: 3\n    }\n  },\n  legend: {\n    bottom: {\n      width: 200,\n      textStyle: {\n        fill: '#fff',\n        fontSize: 12\n      }\n    }\n  },\n  label: {}\n}\n// 050B39\n// 0092FE\nexport default GlobalTheme\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { Layout } from 'antd'\nimport LayoutHeader from '@/layout/layoutHeader'\n\nimport Stargzing from '@/containers/stargazing'\nimport Details from '@/containers/details'\n\n/*G2 全局样式*/\nimport { G2 } from 'bizcharts'\nimport GlobalTheme from '@/utils/G2.theme.js'\n\nconst { Global, Util, Theme } = G2\nconst { Header, Content } = Layout\n\nconst theme = Util.deepMix(GlobalTheme, Theme)\n\nGlobal.setTheme(theme)\n\nconst Main = props => {\n  return (\n    <>\n      <Header style={{ position: 'fixed', zIndex: 999, width: '100%' }}>\n        <LayoutHeader />\n      </Header>\n      <Content className=\"main-containers\">\n        <Router />\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/main\" />\n          <Route exact path=\"/main\" component={Stargzing} />\n          <Route exact path=\"/main/details\" component={Details} />\n        </Switch>\n      </Content>\n    </>\n  )\n}\n\nexport default Main\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n// import { useDispatch } from 'react-redux'\nimport { ConfigProvider, message } from 'antd'\nimport zh_CN from 'antd/lib/locale-provider/zh_CN'\nimport 'moment/locale/zh-cn'\n\n// view\nimport Login from '@/views/login' /*登录*/\nimport Main from '@/views/main' /*主界面*/\n\n//全局配置消息最多显示一个\nmessage.config({\n  maxCount: 1,\n  top: 64\n})\n\nconst AuthRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => {\n      return localStorage.getItem('userInfo') ? <Component {...props} /> : <Redirect to=\"/login\" />\n    }}\n  />\n)\n// 有登录信息的跳转 用于判断是否可以进入 login 页面\nconst UnAuthRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (localStorage.getItem('userInfo') ? <Redirect to=\"/main\" /> : <Component {...props} />)}\n  />\n)\n\nconst App = props => {\n  return (\n    <ConfigProvider locale={zh_CN}>\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            <UnAuthRoute path=\"/login\" component={Login} />\n            <AuthRoute exact path=\"/\" component={Main} />\n            <AuthRoute path=\"/main\" component={Main} />Ï\n          </Switch>\n        </Router>\n      </div>\n    </ConfigProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider }  from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga' // 引入redux-saga中的createSagaMiddleware函数\nimport rootReducer from './reducers' // 引入reducer\nimport rootSaga from './sagas' // 引入saga\n\nimport App from './App'\nimport './assets/normalize.css' // 引入normalize基本样式\nimport './assets/styles/app.less' // 引入全局样式\n\nconst sagaMiddleware = createSagaMiddleware() // 创建saga中间件\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware)) // 创建store\nsagaMiddleware.run(rootSaga) // 运行 saga 中间件\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}